@article{Frakes2005,
author = {Frakes, W.B. and {Kyo Kang}, Kyo},
doi = {10.1109/TSE.2005.85},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Frakes, Kyo Kang - 2005 - Software reuse research status and future.pdf:pdf},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Computer science,Finance,Index Terms- Software reuse,Productivity,Reliability engineering,Software architecture,Software engineering,Software libraries,Software quality,Software reusability,Software systems,architectures,domain engineering,finance.,generators,metrics,research,research and development,software architecture,software engineering,software metrics,software reusability,software reuse,software reuse research},
mendeley-tags = {software reuse},
month = {jul},
number = {7},
pages = {529--536},
publisher = {IEEE},
title = {{Software reuse research: status and future}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1492369},
volume = {31},
year = {2005}
}

@article{McIlroy1968,
abstract = {QUOTE: "The most important characteristic of a software components industry is that it will offer families of routines for any given job. No user of a particular member of a family should pay a penalty, in unwanted generality, for the fact that he is employing a standard model routine. In other words, the purchaser of a component from a family will choose one tailored to his exact needs. He will consult a catalogue offering routines in varying degrees of precision, robustness, time-space performance, and generality. He will be confident that each routine in the family is of high quality - reliable and efficient. He will expect the routine to be intelligible, doubtless expressed in a higher level language appropriate to the purpose of the component, though not necessarily instantly compilable in any processor he has for his machine. He will expect families of routines to be constructed on rational principles so that families fit together as building blocks. In short, he should be able safely to regard components as black boxes."},
author = {McIlroy, M.D.},
journal = {Software Engineering: Report on Conference Sponsored by NATO},
keywords = {- industrialization model for programming,component factory,software components as black boxes,software reuse,taking signals from mass production methods.  mana},
mendeley-tags = {software reuse},
pages = {138--155},
title = {{Mass Produced Software Components}},
year = {1968}
}

@inproceedings{Stroustrup,
author = {Stroustrup, B.},
booktitle = {Proceedings of Fourth IEEE International Conference on Software Reuse},
doi = {10.1109/ICSR.1996.496109},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Stroustrup - Unknown - Language-technical aspects of reuse.pdf:pdf},
isbn = {0-8186-7301-X},
pages = {11--19},
publisher = {IEEE Comput. Soc. Press},
title = {{Language-technical aspects of reuse}},
url = {http://ieeexplore.ieee.org/document/496109/}
}

@article{Stefi2016,
author = {Stefi, Anisa and Lang, Karl and Hess, Thomas},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Stefi, Lang, Hess - 2016 - A Contingency Perspective on External Component Reuse and Software Project Success.pdf:pdf},
journal = {AMCIS 2016 Proceedings},
keywords = {software reuse},
mendeley-tags = {software reuse},
title = {{A Contingency Perspective on External Component Reuse and Software Project Success}},
url = {http://aisel.aisnet.org/amcis2016/ITProj/Presentations/16},
year = {2016}
}

@article{Kessel2016,
author = {Kessel, Marcus and Atkinson, Colin},
doi = {10.1007/s10796-016-9685-3},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Kessel, Atkinson - 2016 - Ranking software components for reuse based on non-functional properties.pdf:pdf},
issn = {1387-3326},
journal = {Information Systems Frontiers},
keywords = {software reuse},
mendeley-tags = {software reuse},
month = {jul},
pages = {1--29},
publisher = {Springer US},
title = {{Ranking software components for reuse based on non-functional properties}},
url = {http://link.springer.com/10.1007/s10796-016-9685-3},
year = {2016}
}

@book{Ezran2002,
abstract = {Right context, software reuse promises high value to businesses that$\backslash$ndevelop software, opening the door to radical improvements in their$\backslash$nsoftware capability (productivity, cost, time to market). Attempts$\backslash$nto adopt reuse without a sound understanding of the range of issues$\backslash$ninvolved, however, can lead to expensive failure. This book is for$\backslash$nthose who are wondering whether they should adopt reuse and how,$\backslash$nand also to those who have already started to adopt it but are wondering$\backslash$nwhere they may be going wrong and how they could do better. It consistently$\backslash$nemphasizes the practical issues that influence success or failure$\backslash$nin reuse; and it offers a concise and balanced coverage of the essentials$\backslash$nof the subject, rather than going into undue depth or detail on some$\backslash$ntopics at the expense of others. It occupies the central ground between$\backslash$nbeing on the one hand an academic textbook and on the other hand$\backslash$na cookbook with ready-made recipes for exactly ``how to do it''. The$\backslash$nauthors have drawn on their extensive experience of reuse and of$\backslash$nsoftware process improvement to provide a readable and balanced coverage$\backslash$nof the subject. This book is suitable for business executives, software$\backslash$nmanagers and software developers, regardless of whatever kind of$\backslash$nsoftware or applications are developed by their organisations, and$\backslash$nwhatever the size of those organisations. A special feature of the$\backslash$nbook is the frequent use of experience notes, drawn from the real-life$\backslash$nexperience of organisations that have embarked on the reuse adventure.},
author = {Ezran, Michel and Morisio, Maurizio and Tully, C J},
booktitle = {Practitioner series,},
doi = {citeulike-article-id:3944385},
isbn = {1852335025 (pbk.) :},
keywords = {Computer software Reusability.,software reuse},
mendeley-tags = {software reuse},
pages = {xxi, 222},
title = {{Practical software reuse}},
year = {2002}
}

@article{Mili1999,
author = {Mili, A. and Yacoub, S. and Addy, E. and Mili, H.},
doi = {10.1109/52.795098},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Mili et al. - 1999 - Toward an engineering discipline of software reuse.pdf:pdf},
issn = {07407459},
journal = {IEEE Software},
number = {5},
pages = {22--31},
title = {{Toward an engineering discipline of software reuse}},
url = {http://ieeexplore.ieee.org/document/795098/},
volume = {16},
year = {1999}
}

@inproceedings{Kim1992,
author = {Kim, Y. and Stohr, E.A.},
booktitle = {Proceedings of the Twenty-Fifth Hawaii International Conference on System Sciences},
doi = {10.1109/HICSS.1992.183360},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Kim, Stohr - 1992 - Software reuse issues and research directions.pdf:pdf},
isbn = {0-8186-2420-5},
pages = {612--623 vol.4},
publisher = {IEEE},
title = {{Software reuse: issues and research directions}},
url = {http://ieeexplore.ieee.org/document/183360/},
year = {1992}
}

@article{Krueger1992,
author = {Krueger, Charles W. and W., Charles},
doi = {10.1145/130844.130856},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Krueger, W. - 1992 - Software reuse(2).pdf:pdf;:Users/morph3o/Mannheim/Thesis/Papers/Krueger, W. - 1992 - Software reuse.pdf:pdf},
issn = {03600300},
journal = {ACM Computing Surveys},
keywords = {abstraction,cognitive distance,software reuse},
month = {jun},
number = {2},
pages = {131--183},
publisher = {ACM},
title = {{Software reuse}},
url = {http://portal.acm.org/citation.cfm?doid=130844.130856},
volume = {24},
year = {1992}
}

@article{Frakes1996,
author = {Frakes, William and Terry, Carol},
doi = {10.1145/234528.234531},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Frakes, Terry - 1996 - Software reuse metrics and models(2).pdf:pdf},
issn = {03600300},
journal = {ACM Computing Surveys},
keywords = {cost-benefit analysis,definitions,economics,maturity assessment,models,object-oriented,productivity,quality,reusability,reusability assessment,reuse,reuse level,reuse library metrics,software,software reuse failure modes model},
month = {jun},
number = {2},
pages = {415--435},
publisher = {ACM},
title = {{Software reuse: metrics and models}},
url = {http://portal.acm.org/citation.cfm?doid=234528.234531},
volume = {28},
year = {1996}
}

@book{Mili2002,
abstract = {1. Software reuse and software engineering -- 2. State of the art and the practice -- 3. Aspects of software reuse -- 4. Software reuse organizations -- 5. Support services -- 6. Institutionalizing reuse -- 7. Building reusable assets: an overview -- 8. Domain analysis -- 9. Programming paradigms and reusability -- 10. A pragmatic introduction to object orientation -- 11. Abstraction and parameterization techniques in object orientation -- 12. Composition techniques in object orientation -- 13. Application frameworks -- 14. Architectural frameworks -- 15. Application engineering -- 16. Component storage and retrieval -- 17. Reusable asset integration -- 18. Software reuse metrics -- 19. Software reuse cost estimation -- 20. Software reuse return on investments -- 21. Component-based software engineering (CBSE) -- 22. Product-line engineering (PLE) -- 23. COTS based development -- Appendices -- Bibliography -- Index.},
author = {Mili, Hafedh.},
isbn = {0471398195},
pages = {636},
publisher = {Wiley},
title = {{Reuse based software engineering : techniques, organization and measurement}},
year = {2002}
}

@misc{Fowler2006,
author = {Fowler, Martin},
keywords = {continuous integration},
mendeley-tags = {continuous integration},
title = {{Continuous Integration}},
url = {http://martinfowler.com/articles/continuousIntegration.html},
urldate = {2016-09-11},
year = {2006}
}

@article{Rejstrom2016,
author = {Rejstr{\"{o}}m, Kim},
file = {:Users/morph3o/Mannheim/Thesis/Papers/Rejstr{\"{o}}m - 2016 - Implementing Continuous Integration in a Small Company A Case Study.pdf:pdf},
keywords = {continuous integration},
mendeley-tags = {continuous integration},
title = {{Implementing Continuous Integration in a Small Company: A Case Study}},
year = {2016}
}

@article{Rodriguez2016,
abstract = {The software intensive industry is moving towards the adoption of a value-driven and adaptive real-time business paradigm. The traditional view of software as an item that evolves through releases every few months is being replaced by the continuous evolution of software functionality. This study aims to classify and analyse the literature related to continuous deployment in the software domain in order to scope the phenomenon, provide an overview of the state-of-the-art, investigate the scientific evidence in the reported results and identify areas suitable for further research. We conducted a systematic mapping study and classified the continuous deployment literature. The benefits and challenges related to continuous deployment were also analysed. RESULTS: The systematic mapping study includes 50 primary studies published between 2001 and 2014. An in-depth analysis of the primary studies revealed ten recurrent themes that characterize continuous deployment and provide researchers with directions for future work. In addition, a set of benefits and challenges of which practitioners may take advantage were identified. CONCLUSION: Overall, although the topic area is very promising, it is still in its infancy, thus offering a plethora of new opportunities for both researchers and software intensive companies.},
author = {Rodr{\'{i}}guez, Pilar and Haghighatkhah, Alireza and Lwakatare, Lucy Ellen and Teppola, Susanna and Suomalainen, Tanja and Eskeli, Juho and Karvonen, Teemu and Kuvaja, Pasi and Verner, June M. and Oivo, Markku},
doi = {10.1016/j.jss.2015.12.015},
journal = {Journal of Systems and Software},
keywords = {continuous integration},
mendeley-tags = {continuous integration},
pages = {263--291},
title = {{Continuous deployment of software intensive products and services: A systematic mapping study}},
volume = {123},
year = {2016}
}

@article{Mantyla2015,
author = {M{\"{a}}ntyl{\"{a}}, Mika V. and Adams, Bram and Khomh, Foutse and Engstr{\"{o}}m, Emelie and Petersen, Kai},
doi = {10.1007/s10664-014-9338-4},
file = {:Users/morph3o/Mannheim/Thesis/Papers/M{\"{a}}ntyl{\"{a}} et al. - 2015 - On rapid releases and software testing a case study and a semi-systematic literature review.pdf:pdf},
journal = {Empirical Software Engineering},
keywords = {continuous integration},
mendeley-tags = {continuous integration},
month = {oct},
number = {5},
pages = {1384--1425},
publisher = {Springer US},
title = {{On rapid releases and software testing: a case study and a semi-systematic literature review}},
url = {http://link.springer.com/10.1007/s10664-014-9338-4},
volume = {20},
year = {2015}
}

@inproceedings{Stahl2014,
address = {New York, New York, USA},
author = {St{\aa}hl, Daniel and Bosch, Jan},
booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering - ICSE Companion 2014},
doi = {10.1145/2591062.2591186},
file = {:Users/morph3o/Mannheim/Thesis/Papers/St{\aa}hl, Bosch - 2014 - Automated software integration flows in industry a multiple-case study.pdf:pdf},
isbn = {9781450327688},
keywords = {continuous integration},
mendeley-tags = {continuous integration},
pages = {54--63},
publisher = {ACM Press},
title = {{Automated software integration flows in industry: a multiple-case study}},
url = {http://dl.acm.org/citation.cfm?doid=2591062.2591186},
year = {2014}
}





