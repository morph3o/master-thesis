private void textualSearchComponent(
	String method,
	String recipient) throws IOException, TemplateException {

	CandidateSearchClient candidateSearchClient =
		new CandidateSearchClient(baseURI, auth(user, pass));
	CandidateSearchRequest request =
		new CandidateSearchRequest();

	int maxResults = 10;

	request.setInput(method);
	QueryParams queryParams = new QueryParams();
	queryParams.setRows(maxResults);

	queryParams.setArtifactInformation(true);
	queryParams.setContent(true);

	// FILTERS
	queryParams.setFilters(Arrays.asList(
		Filters.HASH_CODE_CLONE_FILTER,
		Filters.NO_ABSTRACT_CLASS_FILTER,
		Filters.NO_INTERFACE_FILTER,
		Filters.LATEST_VERSION_FILTER,
		Filters.FUNCTIONAL_SUFFICIENCY_FILTER
	));

	request.setQueryParams(queryParams);
	request.setTestDrivenSearch(Boolean.FALSE);

	queryParams.setRankingStrategy(Rankings.SINGLE_OBJECTIVE);

	List<RankingCriterion> rankingCriteria = Collections.singletonList(
		RankingCriterionBuilder
			.rankingCriterion()
			.withName("luceneScore")
			.withObjective(RankingCriterion.MAX)
			.build()
	);

	queryParams.setRankingCriteria(rankingCriteria);

	CandidateSearchResponse response =
		candidateSearchClient.search(request);
	CandidateListResult result =
		response.getCandidates();

	this.sendResult(
		this.processTemplateTextualSearchResult(method, result, queryParams),
		recipient,
		"Textual search"
	);
}
