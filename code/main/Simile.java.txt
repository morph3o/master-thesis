package de.unimannheim.informatik.swt.simile;

import com.google.common.base.Strings;
import de.unimannheim.informatik.swt.simile.services.*;
import org.apache.commons.lang3.exception.ExceptionUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import java.io.File;
import java.io.IOException;
import java.util.List;

@Service
public class Simile {

    private final SocoraRequester socoraRequester;

    @Autowired
    public Simile(SocoraRequester socoraRequester) {
            this.socoraRequester = socoraRequester;
    }

    @Async
    public void searchForComponents(
		String repo,
		String branch,
		String folder,
		String recipient
		) throws IOException, InterruptedException {

		new Cloner(repo, branch, folder).cloneRepository();

        JavaClassFilter javaClassFilter = new JavaClassFilter();

        File maintDir = new File(String.format("%s/src/main", folder));
        JavaClassHandler javaClassHandler = new JavaClassHandler();
        new DirectoryExplorer(javaClassHandler, javaClassFilter).explore(maintDir);

        File testDir = new File(String.format("%s/src/test", folder));
        JavaClassHandler testClassHandler = new JavaClassHandler();
        new DirectoryExplorer(testClassHandler, javaClassFilter).explore(testDir);

        this.makeRequestWithClasses(javaClassHandler.getClassesMQLNotation(), recipient);
        this.makeRequestWithTestClasses(testClassHandler.getTestClassesCode(), recipient);
    }

    private void makeRequestWithClasses(List<String> classes, String recipientEmail) {
        classes.forEach(c -> {
            try {
                socoraRequester
					.searchComponent(c, SocoraRequester.INTERFACE_DRIVEN_SEARCH, recipientEmail);
            } catch (Exception ex) {
                logger.error(ExceptionUtils.getStackTrace(ex));
            }
        });
    }

    private void makeRequestWithTestClasses(List<String> testClasses, String recipientEmail) {
        testClasses.forEach(tc -> {
            try {
                socoraRequester
					.searchComponent(tc, SocoraRequester.TEST_DRIVEN_SEARCH, recipientEmail);
            } catch (Exception ex) {
                logger.error(ExceptionUtils.getStackTrace(ex));
            }
        });
    }
}
