\chapter{Simile }
\label{chap:simile}

In this work we present Simile, which is a tool that leverages the Continuous Integration process in order to recommend similar components that are being developed in a software project. Following the usage scenario explained previously in section \ref{usage-scenario}, we will describe how our approach works:

Once a member of the team makes a commit and pushes to the remote Git server, our tool will be triggered by Jenkins. This tool will receives the repository URL where the project is being stored. Then it will clone the repository locally and will go through the source code in order to extract the different class names, method signatures and test classes of the source code. Once done it will make requests to SOCORA using the information extracted. SOCORA will response with all the components that are similar to the components extracted from the project. Simile will get this response and it will generate a report listing all the similar components to the components that are being developed by the team. This report will be sent by email to the members of team so they will know if there is already a component that can be reuse instead of developing it from scratch. Figure \ref{} describes the process of our approach.



The main objective of Simile is to help the team to find similar components so they would be able to reuse them. Thus they would reduce time development and costs through reuse components that are already tested and ready to work.

\section{CI integration}
Our prototype leverages the Continuous Integration process to improve the chances of component reuse. Whenever
\section{SOCORA Integration}
